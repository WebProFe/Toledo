{"ast":null,"code":"import _classCallCheck from \"/Users/Lis/Documents/ Fernando Medina/Projects/toledo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Lis/Documents/ Fernando Medina/Projects/toledo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Lis/Documents/ Fernando Medina/Projects/toledo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Lis/Documents/ Fernando Medina/Projects/toledo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Lis/Documents/ Fernando Medina/Projects/toledo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Lis/Documents/ Fernando Medina/Projects/toledo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Lis/Documents/ Fernando Medina/Projects/toledo/src/Components/Navigation/Navigation.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport './Navigation.css';\n\nvar Navigation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navigation, _Component);\n\n  function Navigation(props) {\n    var _this;\n\n    _classCallCheck(this, Navigation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navigation).call(this, props));\n\n    _this.handleScroll = function () {\n      var prevScrollpos = _this.state.prevScrollpos;\n      var currentScrollPos = window.pageYOffset;\n      var visible = prevScrollpos > currentScrollPos;\n\n      _this.setState({\n        prevScrollpos: currentScrollPos,\n        visible: visible\n      });\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleScroll = _this.handleScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isOpen: false,\n      prevScrollpos: window.pageYOffset,\n      visible: true\n    };\n    return _this;\n  } // Adds an event listener when the component is mount.\n\n\n  _createClass(Navigation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"scroll\", this.handleScroll);\n    } // Remove the event listener when the component is unmount.\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n    } // Hide or show the menu.\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: classnames(\"navigation\", {\n          \"navigation--hidden\": !this.state.visible\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        light: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"reactstrap\"), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/components/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Components\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"https://github.com/reactstrap/reactstrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"GitHub\")), React.createElement(UncontrolledDropdown, {\n        nav: true,\n        inNavbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        nav: true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Options\"), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Option 1\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Option 2\"), React.createElement(DropdownItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Reset\")))))));\n    }\n  }]);\n\n  return Navigation;\n}(Component);\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/Lis/Documents/ Fernando Medina/Projects/toledo/src/Components/Navigation/Navigation.js"],"names":["React","Component","classnames","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Navigation","props","handleScroll","prevScrollpos","state","currentScrollPos","window","pageYOffset","visible","setState","toggle","bind","isOpen","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n  import './Navigation.css'\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.state = {\n      isOpen: false,\n      prevScrollpos: window.pageYOffset,\n      visible:true\n    };\n  }\n  // Adds an event listener when the component is mount.\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  // Remove the event listener when the component is unmount.\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  // Hide or show the menu.\n  handleScroll = () => {\n    const { prevScrollpos } = this.state;\n\n    const currentScrollPos = window.pageYOffset;\n    const visible = prevScrollpos > currentScrollPos;\n\n    this.setState({\n      prevScrollpos: currentScrollPos,\n      visible\n    });\n  };\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div className={classnames(\"navigation\", {\n        \"navigation--hidden\": !this.state.visible\n      })}>\n        <div className=\"top-bar\"></div>\n        <Navbar light expand=\"md\">\n          <NavbarBrand href=\"/\">reactstrap</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/components/\">Components</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Options\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    Option 1\n                  </DropdownItem>\n                  <DropdownItem>\n                    Option 2\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    Reset\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}